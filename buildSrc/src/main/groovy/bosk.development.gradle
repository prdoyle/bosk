
/*
 * Settings related to Bosk development and developers.
 * Actual technological dependencies of Bosk should go into the project's Gradle files.
 */

plugins {
	id 'java-library'
}

compileTestJava.options.encoding = 'UTF-8'

repositories {
	maven {
		url 'https://plugins.gradle.org/m2/'
	}
	mavenCentral()
}

allprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	apply plugin: 'jacoco'
	apply plugin: 'com.github.spotbugs' // https://plugins.gradle.org/plugin/com.github.spotbugs
	apply plugin: 'maven-publish'

	// SpotBugs warnings on test code are not useful and often counterproductive
	spotbugsTest.enabled = false

	tasks.withType(Tar) {
		enabled = false
	}
}

dependencies {
	compileJava {
		options.compilerArgs << '-parameters'
		options.compilerArgs << '-Xlint'
		options.compilerArgs << '-Xlint:-serial'     // Don't care about Java serialization
		options.compilerArgs << '-Xlint:-try'        // Really annoying bogus "auto-closeable never used" warnings
		options.compilerArgs << '-Xlint:-processing' // Not all annotations are meant for compile-time "annotation processing"
	}

	compileTestJava {
		options.compilerArgs << '-parameters'
	}
}

// Developer aids
dependencies {
	annotationProcessor "org.projectlombok:lombok:1.18.30"
	compileOnly "org.projectlombok:lombok:1.18.30"
	testAnnotationProcessor "org.projectlombok:lombok:1.18.30"
	testCompileOnly "org.projectlombok:lombok:1.18.30"

	testImplementation "org.junit.jupiter:junit-jupiter-api:5.10.1"
	testImplementation "org.junit.jupiter:junit-jupiter-params:5.10.1"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.10.1"

	testImplementation "org.testcontainers:testcontainers:1.19.3"
	testImplementation "org.testcontainers:junit-jupiter:1.19.3"
	testImplementation "org.testcontainers:toxiproxy:1.19.3"

	testImplementation "org.hamcrest:hamcrest:2.2"
	testImplementation "org.hamcrest:hamcrest-library:2.2"

	implementation "org.slf4j:slf4j-api:1.7.36"
	testImplementation "ch.qos.logback:logback-classic:1.4.14"

	implementation 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations:2.5.0'

	testImplementation 'org.openjdk.jmh:jmh-core:1.37'
	testAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.37'

}

test {
	useJUnitPlatform()

	// High-performance code sometimes uses `assert` statements instead of explicit checks.
	// Our unit tests should be able to check for the presence of these assertions.
	enableAssertions = true

	testLogging.showStandardStreams = true

	reports {
		// Used to convert gradle test output to be understood by Jenkins JUnit publishing
		junitXml.required = true
		html.required = false
	}
}

spotbugs {
	excludeFilter = file("${project.rootDir}/spotbugsExclude.xml")
}
