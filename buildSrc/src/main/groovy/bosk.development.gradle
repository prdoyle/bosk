
/*
 * Settings related to Bosk development and developers.
 * Actual technological dependencies of Bosk should go into the project's Gradle files.
 */

plugins {
	id 'java-library'
}

compileTestJava.options.encoding = 'UTF-8'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	maven {
		url 'https://plugins.gradle.org/m2/'
	}
	mavenCentral()
}

allprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	apply plugin: 'jacoco'
	apply plugin: 'com.github.spotbugs' // https://plugins.gradle.org/plugin/com.github.spotbugs
	apply plugin: 'com.diffplug.gradle.spotless'
	apply plugin: 'maven-publish'

	spotless {
		enforceCheck false
		java {
			importOrder '', '\\#' // Static imports after regular imports, as per mt-server standard and IntelliJ default
			removeUnusedImports()
			trimTrailingWhitespace()
			indentWithTabs()
			replaceRegex 'class-level javadoc indentation fix', /^\*/, ' *'
			replaceRegex 'method-level javadoc indentation fix', /\t\*/, '\t *'
			paddedCell()
		}
		format 'misc', {
			target '**/*.gradle', '**/*.md', '**/.gitignore'

			trimTrailingWhitespace()
			indentWithTabs()
			replaceRegex 'class-level javadoc indentation fix', /^\*/, ' *'
			replaceRegex 'method-level javadoc indentation fix', /\t\*/, '\t *'
			endWithNewline()
		}
	}

	// SpotBugs warnings on test code are not useful and often counterproductive
	spotbugsTest.enabled = false

	spotbugs {
		// Won't fail the build if errors are found
		ignoreFailures = true
	}

	tasks.withType(Tar) {
		enabled = false
	}
}

dependencies {
	compileJava {
		options.compilerArgs << '-parameters'
		options.compilerArgs << '-Xlint'
		options.compilerArgs << '-Xlint:-serial'     // Don't care about Java serialization
		options.compilerArgs << '-Xlint:-try'        // Really annoying bogus "auto-closeable never used" warnings
		options.compilerArgs << '-Xlint:-processing' // Not all annotations are meant for compile-time "annotation processing"
	}

	compileTestJava {
		options.compilerArgs << '-parameters'
	}
}

// Developer aids
dependencies {
	annotationProcessor "org.projectlombok:lombok:1.18.24"
	compileOnly "org.projectlombok:lombok:1.18.24"
	testAnnotationProcessor "org.projectlombok:lombok:1.18.24"
	testCompileOnly "org.projectlombok:lombok:1.18.24"

	testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
	testImplementation "org.junit.jupiter:junit-jupiter-params:5.8.2"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"

	testImplementation "org.testcontainers:testcontainers:1.17.2"
	testImplementation "org.testcontainers:junit-jupiter:1.17.2"
	testImplementation "org.testcontainers:toxiproxy:1.17.2"

	testImplementation "org.hamcrest:hamcrest:2.2"
	testImplementation "org.hamcrest:hamcrest-library:2.2"

	implementation "org.slf4j:slf4j-api:1.7.36"

	// https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
	testImplementation "ch.qos.logback:logback-classic:1.2.11"

	// https://github.com/spotbugs/spotbugs-gradle-plugin/blob/61023da1c663facd308e696a4376e282df559a2b/README.md#refer-the-version-in-the-build-script
	implementation "com.github.spotbugs:spotbugs-annotations:${spotbugs.toolVersion.get()}"

	// OpenTelemetry
	// For libraries, the advice is to use the _earliest_ stable version:
	// https://opentelemetry.io/docs/concepts/instrumenting-library/#opentelemetry-api
	//
	// Our requirements:
	// - SpanBuilder.setAllAttributes requires 1.2.0
	//
	// However, the Spring OTel starter 0.16.1 is apparently incompatible with 1.2.0.
	// It pulls in 0.16.0 so let's use that.
	//
	// https://mvnrepository.com/artifact/io.opentelemetry/opentelemetry-api
	implementation group: 'io.opentelemetry', name: 'opentelemetry-api', version: '0.16.0'

}

test {
	useJUnitPlatform()

	// High-performance code sometimes uses `assert` statements instead of explicit checks.
	// Our unit tests should be able to check for the presence of these assertions.
	enableAssertions = true

	testLogging.showStandardStreams = true

	reports {
		// Used to convert gradle test output to be understood by Jenkins JUnit publishing
		junitXml.enabled = true
		html.enabled = false
	}
}
